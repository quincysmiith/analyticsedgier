install.packages("mime")
Sys.getenv("R_LIBS_USER")
install.packages("mime")
install.packages("mime")
install.packages("knitr")
install.packages("forecast")
install.packages("data.table")
install.package("slidify")
install.packages("slidify")
install.packages("devtools")
source("http://bioconductor.org/biocLite.R")
biocLite()
install.packages("ggplot2")
install.packages(KernSmooth)
install.packages("KernSmooth")
library(KErnSmooth)
library(KernSmooth)
library("KernSmooth")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("devtools")
install.packages("ggplot2")
install.packages("dplyr")
install.packages("ggplot2")
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
install.packages("shiny")
install.packages("tm")
install.packages("SnowballC")
install.packages("flexclust")
install.packages("tm")
install.packages("tm")
install.packages("SnowballC")
install.packages("flexclust")
install.packages("ggplot2")
install.packages("maps")
install.packages("ggmap")
install.packages("igraph")
install.packages("wordcloud")
install.packages("RColorBrewer")
x <- 1
print(x)
x
cube <- function(x,n){
x^3
}
cube(3)
library(datasets)
data(iris)
?iris
type(iris)
dimnames(iris)
library(datasets)
data(iris)
data <- dimnames(iris)
library(datasets)
data(iris)
?iris
head(iris)
str(iris)
lapply(s,mean, s$Sepal.Length)
s <- split(iris, iris$Species)
lapply(s,mean, s$Sepal.Length)
lapply(s, function(x) colMeans(x[, c("Sepal.Length", "Sepal.Width")]))
lapply(s, function(x) mean(x[, c("Sepal.Length", "Sepal.Width")]))
apply(iris[, 1:4], 2, mean)
apply(iris, 2, mean)
library(datasets)
data(mtcars)
head(mtcars)
with(mtcars, tapply(mpg, cyl, mean))
with(mtcars, tapply(mpg, gear, mean))
summary(mtcars)
s <- with(mtcars, tapply(mpg, cyl, mean))
s
s[1]
s[1][1]
s[1] - s[2]
s[1] - s[3]
with(mtcars, tapply(mpg, cyl, mean))
with(mtcars, tapply(hp, cyl, mean))
s <- with(mtcars, tapply(hp, cyl, mean))
s[1] - s[3]
?inv
?solve
c(2,3,5,8,13)
Country <- c("Brazil", "China" , "India", "Switzwerland", "USA")
LifeExpectancy <- c(74,76,65,83,79)
Country
LifeExpactancy
LifeExpectancy
Country[1]
seq(0, 100, 2)
CountryData <- data.frame(Country, LifeExpactancy)
CountryData <- data.frame(Country, LifeExpectancy)
CountryData
CountryData$Population <- c(199000, 1390000, 1240000, 7997, 318000)
# At home
setwd("~/Documents/analyticsedgier/Week 01. Introduction to Analytics")
cps <- read.csv('CPSData.csv')
# How many interviewees are in the data
nrow(cps)
# what is the most common industry
names(cps)
sort(table(cps$Industry))
# which state has the fewest interviewees
sort(table(cps$State))
# what proportion of interviewees are citizens
sort(table(cps$Citizenship))
(131302 - 7590) / 131302
# which races have more than 250 respondents that are Hispanic
unique(cps$Hispanic)
cps_hispanic <- subset(cps, Hispanic == 1)
sort(table(cps_hispanic$Race))
# Which columns have na's
summary(cps)
# how are being married and various demographics related
table(cps$Region, is.na(cps$Married))
table(cps$Age, is.na(cps$Married))
table(cps$Sex, is.na(cps$Married))
table(cps$Citizenship, is.na(cps$Married))
# how many states had all interviewees living in a non metro area
table(cps$State, is.na(cps$MetroAreaCode))
# which region had largest proportion of metro
table(cps$Region, is.na(cps$MetroAreaCode))
20010 / (20010+10674)
20330 / (20330+5609)
31631 / (31631+9871)
25093 / (25093+8084)
#
cps$MetroBool <- as.logical(cps$MetroAreaCode)
tapply(is.na(cps$MetroBool), cps$State, mean)
#
mam <- read.csv("MetroAreaCodes.csv")
cm <- read.csv("CountryCodes.csv")
cps2 <- (cps, mam, by.x="MetroAreaCode", by.y="Code", all.x=TRUE))
cps2 <- merge(cps, mam, by.x="MetroAreaCode", by.y="Code", all.x=TRUE))
merge(cps, mam, by.x="MetroAreaCode", by.y="Code", all.x=TRUE)
cps2 <- merge(cps, mam, by.x="MetroAreaCode", by.y="Code", all.x=TRUE)
names(cps)
names(cps2)
table(is.na(cps2$MetroArea))
table(cps2$MetroArea)
sort(table(cps2$MetroArea))
str(cps2)
tapply(cps2$Hispanic, cps2$State, mean, na.rm=TRUE)
sort(tapply(cps2$Hispanic, cps2$State, mean, na.rm=TRUE))
sort(tapply(cps2$Hispanic, cps2$MetroArea, mean, na.rm=TRUE))
sort(tapply(cps2$Race == "Asian", cps2$MetroArea, mean))
sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean, na.rm=TRUE))
sort(tapply(cps2$Education == "No high school diploma", cps2$MetroArea, mean, na.rm=TRUE))
names(cm)
str(cps2)
cps3 <- merge(cps2, cm, by.x="CountryOfBirthCode", by.y="Code", all.x=TRUE)
names(cps3)
names(cps2)
table(is.na(cps3$Country))
sort(table(cps3$Country))
table(is.na(cps3$Country[cps3$MetroAre == "New York-Northern New Jersey-Long Island, NY-NJ-PA"]))
table(is.na(cps3$Country[cps3$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA"]))
nj_mask <- cps3$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA"
table(cps3$Country[nj_mask])
sort(table(cps3$Country[nj_mask]))
(((3736 / 5404) - 1) * -1)
sort(table(cps3$MetroArea[india_mask]))
india_mask <- cps3$Country == "India"
sort(table(cps3$MetroArea[india_mask]))
brazil_mask <- cps3$Country == "Brazil"
sort(table(cps3$MetroArea[brazil_mask]))
somalia_mask <- cps3$Country == "Somalia"
sort(table(cps3$MetroArea[somalia_mask]))
